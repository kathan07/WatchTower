name: Full Build & Deploy

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-and-deploy-all:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push All Services
        run: |
          services=("client" "server" "alerting-service" "analysis-service" "cleaning-service" "monitoring-service" "scheduler-service")
          for service in "${services[@]}"; do
            docker buildx build \
              -f Dockerfiles/${service}.Dockerfile \
              -t ${{ secrets.DOCKERHUB_USERNAME }}/$service:latest \
              ./apps/$service \
              --push
          done

      - name: Deploy All Services
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DOCKER_HOST }}
          username: ${{ secrets.DOCKER_USER }}
          key: ${{ secrets.DOCKER_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

            # Deploy client service
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/client:latest
            docker service update \
              --image ${{ secrets.DOCKERHUB_USERNAME }}/client:latest \
              --env-add "API_URL=${{ secrets.CLIENT_API_URL }}" \
              --env-add "CLIENT_ENV=${{ secrets.CLIENT_ENV }}" \
              myapp_client

            # Deploy server service
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/server:latest
            docker service update \
              --image ${{ secrets.DOCKERHUB_USERNAME }}/server:latest \
              --env-add "DB_URL=${{ secrets.SERVER_DB_URL }}" \
              --env-add "REDIS_URL=${{ secrets.SERVER_REDIS_URL }}" \
              --env-add "JWT_SECRET=${{ secrets.SERVER_JWT_SECRET }}" \
              --env-add "SERVER_ENV=${{ secrets.SERVER_ENV }}" \
              myapp_server

            # Deploy alerting-service
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/alerting-service:latest
            docker service update \
              --image ${{ secrets.DOCKERHUB_USERNAME }}/alerting-service:latest \
              --env-add "DB_URL=${{ secrets.ALERTING_DB_URL }}" \
              --env-add "REDIS_URL=${{ secrets.ALERTING_REDIS_URL }}" \
              --env-add "SMTP_HOST=${{ secrets.ALERTING_SMTP_HOST }}" \
              --env-add "SMTP_PORT=${{ secrets.ALERTING_SMTP_PORT }}" \
              --env-add "SMTP_USER=${{ secrets.ALERTING_SMTP_USER }}" \
              --env-add "SMTP_PASS=${{ secrets.ALERTING_SMTP_PASS }}" \
              myapp_alerting-service

            # Deploy analysis-service
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/analysis-service:latest
            docker service update \
              --image ${{ secrets.DOCKERHUB_USERNAME }}/analysis-service:latest \
              --env-add "DB_URL=${{ secrets.ANALYSIS_DB_URL }}" \
              --env-add "REDIS_URL=${{ secrets.ANALYSIS_REDIS_URL }}" \
              --env-add "MODEL_PATH=${{ secrets.ANALYSIS_MODEL_PATH }}" \
              myapp_analysis-service

            # Deploy cleaning-service
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/cleaning-service:latest
            docker service update \
              --image ${{ secrets.DOCKERHUB_USERNAME }}/cleaning-service:latest \
              --env-add "DB_URL=${{ secrets.CLEANING_DB_URL }}" \
              --env-add "RETENTION_DAYS=${{ secrets.CLEANING_RETENTION_DAYS }}" \
              myapp_cleaning-service

            # Deploy monitoring-service
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/monitoring-service:latest
            docker service update \
              --image ${{ secrets.DOCKERHUB_USERNAME }}/monitoring-service:latest \
              --env-add "DB_URL=${{ secrets.MONITORING_DB_URL }}" \
              --env-add "METRICS_PORT=${{ secrets.MONITORING_METRICS_PORT }}" \
              --env-add "ALERT_THRESHOLD=${{ secrets.MONITORING_ALERT_THRESHOLD }}" \
              myapp_monitoring-service

            # Deploy scheduler-service
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/scheduler-service:latest
            docker service update \
              --image ${{ secrets.DOCKERHUB_USERNAME }}/scheduler-service:latest \
              --env-add "DB_URL=${{ secrets.SCHEDULER_DB_URL }}" \
              --env-add "REDIS_URL=${{ secrets.SCHEDULER_REDIS_URL }}" \
              --env-add "CRON_TIMEZONE=${{ secrets.SCHEDULER_CRON_TIMEZONE }}" \
              myapp_scheduler-service